import{ContentTypeId as e}from"@xmtp/content-type-primitives";import t,{EncodedContent as s,Consent as n,ContentTypeId as i,ListMessagesOptions as r,ListConversationsOptions as a,CreateGroupOptions as o,CreateDMOptions as c,PermissionPolicySet as d,GroupPermissionsOptions as u,MessageDisappearingSettings as p,getInboxIdForAddress as l,generateInboxId as m,createClient as g,LogOptions as y,ConversationType as v,verifySignedWithPublicKey as I}from"@xmtp/wasm-bindings";const b=e=>{return new s((t=e.type,new i(t.authorityId,t.typeId,t.versionMajor,t.versionMinor)),new Map(Object.entries(e.parameters)),e.fallback,e.compression,e.content);var t},h=e=>{return{type:(t=e.type,{authorityId:t.authorityId,typeId:t.typeId,versionMajor:t.versionMajor,versionMinor:t.versionMinor}),parameters:e.parameters,fallback:e.fallback,compression:e.compression,content:e.content};var t},w=t=>{return{type:(s=t.type,new e({authorityId:s.authorityId,typeId:s.typeId,versionMajor:s.versionMajor,versionMinor:s.versionMinor})),parameters:t.parameters,fallback:t.fallback,compression:t.compression,content:t.content};var s},S=t=>{return{content:h((s=t.content,{type:(n=s.type,new e({authorityId:n.authorityId,typeId:n.typeId,versionMajor:n.versionMajor,versionMinor:n.versionMinor})),parameters:Object.fromEntries(s.parameters),fallback:s.fallback,compression:s.compression,content:s.content})),convoId:t.convoId,deliveryStatus:t.deliveryStatus,id:t.id,kind:t.kind,senderInboxId:t.senderInboxId,sentAtNs:t.sentAtNs};var s,n},x=e=>new a(e.consentStates,e.createdAfterNs,e.createdBeforeNs,e.includeDuplicateDms??!1,e.limit),k=e=>{return new o(e.permissions,e.name,e.imageUrlSquare,e.description,e.customPermissionPolicySet&&e.permissions===u.CustomPolicy?(t=e.customPermissionPolicySet,new d(t.addMemberPolicy,t.removeMemberPolicy,t.addAdminPolicy,t.removeAdminPolicy,t.updateGroupNamePolicy,t.updateGroupDescriptionPolicy,t.updateGroupImageUrlSquarePolicy,t.updateMessageDisappearingPolicy)):void 0,e.messageDisappearingSettings?T(e.messageDisappearingSettings):void 0);var t},A=e=>new c(e.messageDisappearingSettings?T(e.messageDisappearingSettings):void 0),M=async e=>{const t=e.id,s=e.name,n=e.imageUrl,i=e.description,r=e.permissions,a=e.isActive,o=e.addedByInboxId,c=await e.metadata(),d=e.admins,u=e.superAdmins,p=e.createdAtNs,l=r.policyType,m=r.policySet;return{id:t,name:s,imageUrl:n,description:i,permissions:{policyType:l,policySet:{addAdminPolicy:m.addAdminPolicy,addMemberPolicy:m.addMemberPolicy,removeAdminPolicy:m.removeAdminPolicy,removeMemberPolicy:m.removeMemberPolicy,updateGroupDescriptionPolicy:m.updateGroupDescriptionPolicy,updateGroupImageUrlSquarePolicy:m.updateGroupImageUrlSquarePolicy,updateGroupNamePolicy:m.updateGroupNamePolicy,updateMessageDisappearingPolicy:m.updateMessageDisappearingPolicy}},isActive:a,addedByInboxId:o,metadata:c,admins:d,superAdmins:u,createdAtNs:p}},G=e=>({bytes:e.bytes,clientTimestampNs:e.clientTimestampNs,id:e.id}),f=e=>({accountAddresses:e.accountAddresses,inboxId:e.inboxId,installations:e.installations.map(G),recoveryAddress:e.recoveryAddress}),D=e=>({entity:e.entity,entityType:e.entityType,state:e.state}),P=e=>new n(e.entityType,e.state,e.entity),B=e=>({key:e.key,epoch:e.epoch}),T=e=>new p(e.fromNs,e.inNs),N={local:"http://localhost:5555",dev:"https://dev.xmtp.network",production:"https://production.xmtp.network"},C={local:"http://localhost:5558",dev:"https://message-history.dev.ephemera.network",production:"https://message-history.production.ephemera.network"};class K{#e;#t;constructor(e,t){this.#e=e,this.#t=t}get id(){return this.#t.id()}get name(){return this.#t.groupName()}async updateName(e){return this.#t.updateGroupName(e)}get imageUrl(){return this.#t.groupImageUrlSquare()}async updateImageUrl(e){return this.#t.updateGroupImageUrlSquare(e)}get description(){return this.#t.groupDescription()}async updateDescription(e){return this.#t.updateGroupDescription(e)}get isActive(){return this.#t.isActive()}get addedByInboxId(){return this.#t.addedByInboxId()}get createdAtNs(){return this.#t.createdAtNs()}async metadata(){const e=await this.#t.groupMetadata();return{creatorInboxId:e.creatorInboxId(),conversationType:e.conversationType()}}async members(){return(await this.#t.listMembers()).map((e=>(e=>({accountAddresses:e.accountAddresses,consentState:e.consentState,inboxId:e.inboxId,installationIds:e.installationIds,permissionLevel:e.permissionLevel}))(e)))}get admins(){return this.#t.adminList()}get superAdmins(){return this.#t.superAdminList()}get permissions(){const e=this.#t.groupPermissions();return{policyType:e.policyType(),policySet:e.policySet()}}async updatePermission(e,t,s){return this.#t.updatePermissionPolicy(e,t,s)}isAdmin(e){return this.#t.isAdmin(e)}isSuperAdmin(e){return this.#t.isSuperAdmin(e)}async sync(){return this.#t.sync()}async addMembers(e){return this.#t.addMembers(e)}async addMembersByInboxId(e){return this.#t.addMembersByInboxId(e)}async removeMembers(e){return this.#t.removeMembers(e)}async removeMembersByInboxId(e){return this.#t.removeMembersByInboxId(e)}async addAdmin(e){return this.#t.addAdmin(e)}async removeAdmin(e){return this.#t.removeAdmin(e)}async addSuperAdmin(e){return this.#t.addSuperAdmin(e)}async removeSuperAdmin(e){return this.#t.removeSuperAdmin(e)}async publishMessages(){return this.#t.publishMessages()}sendOptimistic(e){return this.#t.sendOptimistic(e)}async send(e){return this.#t.send(e)}async messages(e){return this.#t.findMessages(e?(e=>new r(e.sentBeforeNs,e.sentAfterNs,e.limit,e.deliveryStatus,e.direction,e.contentTypes))(e):void 0)}get consentState(){return this.#t.consentState()}updateConsentState(e){this.#t.updateConsentState(e)}dmPeerInboxId(){return this.#t.dmPeerInboxId()}messageDisappearingSettings(){return this.#t.messageDisappearingSettings()}async updateMessageDisappearingSettings(e,t){const s=new p(e,t);return this.#t.updateMessageDisappearingSettings(s)}async removeMessageDisappearingSettings(){return this.#t.removeMessageDisappearingSettings()}isMessageDisappearingEnabled(){return this.#t.isMessageDisappearingEnabled()}stream(e){return this.#t.stream({on_message:t=>{e?.(null,t)},on_error:t=>{e?.(t,void 0)}})}}class L{#e;#s;constructor(e,t){this.#e=e,this.#s=t}async sync(){return this.#s.sync()}async syncAll(e){return this.#s.syncAllConversations(e)}getConversationById(e){try{const t=this.#s.findGroupById(e);return new K(this.#e,t)}catch{return}}getMessageById(e){try{return this.#s.findMessageById(e)}catch{return}}getDmByInboxId(e){try{const t=this.#s.findDmByTargetInboxId(e);return new K(this.#e,t)}catch{return}}list(e){return this.#s.list(e?x(e):void 0).map((e=>new K(this.#e,e.conversation)))}listGroups(e){return this.#s.listGroups(e?x(e):void 0).map((e=>new K(this.#e,e.conversation)))}listDms(e){return this.#s.listDms(e?x(e):void 0).map((e=>new K(this.#e,e.conversation)))}async newGroup(e,t){const s=await this.#s.createGroup(e,t?k(t):void 0);return new K(this.#e,s)}async newGroupByInboxIds(e,t){const s=await this.#s.createGroupByInboxIds(e,t?k(t):void 0);return new K(this.#e,s)}async newDm(e,t){const s=await this.#s.createDm(e,t?A(t):void 0);return new K(this.#e,s)}async newDmByInboxId(e,t){const s=await this.#s.createDmByInboxId(e,t?A(t):void 0);return new K(this.#e,s)}getHmacKeys(){return this.#s.getHmacKeys()}stream(e,t){return this.#s.stream({on_conversation:t=>{e?.(null,t)},on_error:t=>{e?.(t,void 0)}},t)}streamGroups(e){return this.#s.stream(e,v.Group)}streamDms(e){return this.#s.stream(e,v.Dm)}streamAllMessages(e,t){return this.#s.streamAllMessages({on_message:t=>{e?.(null,t)},on_error:t=>{e?.(t,void 0)}},t)}streamConsent(e){return this.#s.streamConsent({on_consent_update:t=>{e?.(null,t)},on_error:t=>{e?.(t,void 0)}})}streamPreferences(e){return this.#s.streamPreferences({on_user_preference_update:t=>{e?.(null,t)},on_error:t=>{e?.(t,void 0)}})}}class U{#e;#s;#n;constructor(e){this.#e=e,this.#n=e.accountAddress,this.#s=new L(this,e.conversations())}static async create(e,s,n){const i=await(async(e,s,n)=>{await t();const i=n?.apiUrl||N[n?.env||"dev"],r=n?.dbPath||`xmtp-${n?.env||"dev"}-${e}.db3`,a=await l(i,e)||m(e),o=n&&(void 0!==n.loggingLevel||n.structuredLogging||n.performanceLogging);return g(i,a,e,r,s,n?.historySyncUrl||C[n?.env||"dev"],o?new y(n.structuredLogging??!1,n.performanceLogging??!1,n.loggingLevel):void 0)})(e,s,n);return new U(i)}get accountAddress(){return this.#n}get inboxId(){return this.#e.inboxId}get installationId(){return this.#e.installationId}get installationIdBytes(){return this.#e.installationIdBytes}get isRegistered(){return this.#e.isRegistered}createInboxSignatureText(){try{return this.#e.createInboxSignatureText()}catch{return}}async addAccountSignatureText(e){try{return await this.#e.addWalletSignatureText(e)}catch{return}}async removeAccountSignatureText(e){try{return await this.#e.revokeWalletSignatureText(e)}catch{return}}async revokeAllAOtherInstallationsSignatureText(){try{return await this.#e.revokeAllOtherInstallationsSignatureText()}catch{return}}async revokeInstallationsSignatureText(e){try{return await this.#e.revokeInstallationsSignatureText(e)}catch{return}}async addSignature(e,t){return this.#e.addSignature(e,t)}async addScwSignature(e,t,s,n){return this.#e.addScwSignature(e,t,s,n)}async applySignatures(){return this.#e.applySignatureRequests()}async canMessage(e){return this.#e.canMessage(e)}async registerIdentity(){return this.#e.registerIdentity()}async findInboxIdByAddress(e){return this.#e.findInboxIdByAddress(e)}async inboxState(e){return this.#e.inboxState(e)}async getLatestInboxState(e){return this.#e.getLatestInboxState(e)}async setConsentStates(e){return this.#e.setConsentStates(e.map(P))}async getConsentState(e,t){return this.#e.getConsentState(e,t)}get conversations(){return this.#s}signWithInstallationKey(e){return this.#e.signWithInstallationKey(e)}verifySignedWithInstallationKey(e,t){try{return this.#e.verifySignedWithInstallationKey(e,t),!0}catch{return!1}}verifySignedWithPublicKey(e,t,s){try{return I(e,t,s),!0}catch{return!1}}}let W,_=!1;const O=new Map,j=e=>{self.postMessage(e)},E=e=>{self.postMessage(e)},q=e=>{self.postMessage(e)};self.onmessage=async e=>{const{action:t,id:s,data:n}=e.data;_&&console.log("client worker received event data",e.data);try{if("init"===t&&!W)return W=await U.create(n.address,n.encryptionKey,n.options),_=void 0!==n.options?.loggingLevel&&"off"!==n.options.loggingLevel,void j({id:s,action:t,result:{inboxId:W.inboxId,installationId:W.installationId,installationIdBytes:W.installationIdBytes}});if(!W)throw new Error("Client not initialized");const e=W,i=t=>{const s=e.conversations.getConversationById(t);if(!s)throw new Error(`Group "${t}" not found`);return s};switch(t){case"endStream":{const e=O.get(n.streamId);if(!e)throw new Error(`Stream "${n.streamId}" not found`);e.end(),O.delete(n.streamId),j({id:s,action:t,result:void 0});break}case"createInboxSignatureText":{const n=e.createInboxSignatureText();j({id:s,action:t,result:n});break}case"addAccountSignatureText":{const i=await e.addAccountSignatureText(n.newAccountAddress);j({id:s,action:t,result:i});break}case"removeAccountSignatureText":{const i=await e.removeAccountSignatureText(n.accountAddress);j({id:s,action:t,result:i});break}case"revokeAllOtherInstallationsSignatureText":{const n=await e.revokeAllAOtherInstallationsSignatureText();j({id:s,action:t,result:n});break}case"revokeInstallationsSignatureText":{const i=await e.revokeInstallationsSignatureText(n.installationIds);j({id:s,action:t,result:i});break}case"addSignature":await e.addSignature(n.type,n.bytes),j({id:s,action:t,result:void 0});break;case"addScwSignature":await e.addScwSignature(n.type,n.bytes,n.chainId,n.blockNumber),j({id:s,action:t,result:void 0});break;case"applySignatures":await e.applySignatures(),j({id:s,action:t,result:void 0});break;case"registerIdentity":await e.registerIdentity(),j({id:s,action:t,result:void 0});break;case"isRegistered":{const n=e.isRegistered;j({id:s,action:t,result:n});break}case"canMessage":{const i=await e.canMessage(n.accountAddresses);j({id:s,action:t,result:i});break}case"inboxState":{const i=await e.inboxState(n.refreshFromNetwork),r=f(i);j({id:s,action:t,result:r});break}case"getLatestInboxState":{const i=await e.getLatestInboxState(n.inboxId),r=f(i);j({id:s,action:t,result:r});break}case"setConsentStates":await e.setConsentStates(n.records),j({id:s,action:t,result:void 0});break;case"getConsentState":{const i=await e.getConsentState(n.entityType,n.entity);j({id:s,action:t,result:i});break}case"findInboxIdByAddress":{const i=await e.findInboxIdByAddress(n.address);j({id:s,action:t,result:i});break}case"signWithInstallationKey":{const i=e.signWithInstallationKey(n.signatureText);j({id:s,action:t,result:i});break}case"verifySignedWithInstallationKey":{const i=e.verifySignedWithInstallationKey(n.signatureText,n.signatureBytes);j({id:s,action:t,result:i});break}case"verifySignedWithPublicKey":{const i=e.verifySignedWithPublicKey(n.signatureText,n.signatureBytes,n.publicKey);j({id:s,action:t,result:i});break}case"streamAllGroups":{const i=async(t,s)=>{t?q({type:"group",streamId:n.streamId,error:t.message}):E({type:"group",streamId:n.streamId,result:s?await M(new K(e,s)):void 0})},r=e.conversations.stream(i,n.conversationType);O.set(n.streamId,r),j({id:s,action:t,result:void 0});break}case"streamAllMessages":{const i=(e,t)=>{e?q({type:"message",streamId:n.streamId,error:e.message}):E({type:"message",streamId:n.streamId,result:t?S(t):void 0})},r=e.conversations.streamAllMessages(i,n.conversationType);O.set(n.streamId,r),j({id:s,action:t,result:void 0});break}case"streamConsent":{const i=(e,t)=>{e?q({type:"consent",streamId:n.streamId,error:e.message}):E({type:"consent",streamId:n.streamId,result:t?.map(D)??[]})},r=e.conversations.streamConsent(i);O.set(n.streamId,r),j({id:s,action:t,result:void 0});break}case"streamPreferences":{const i=(e,t)=>{e?q({type:"preferences",streamId:n.streamId,error:e.message}):E({type:"preferences",streamId:n.streamId,result:t??void 0})},r=e.conversations.streamPreferences(i);O.set(n.streamId,r),j({id:s,action:t,result:void 0});break}case"getConversations":{const i=e.conversations.list(n.options),r=await Promise.all(i.map((e=>M(e))));j({id:s,action:t,result:r});break}case"getGroups":{const i=e.conversations.listGroups(n.options),r=await Promise.all(i.map((e=>M(e))));j({id:s,action:t,result:r});break}case"getDms":{const i=e.conversations.listDms(n.options),r=await Promise.all(i.map((e=>M(e))));j({id:s,action:t,result:r});break}case"newGroup":{const i=await e.conversations.newGroup(n.accountAddresses,n.options),r=await M(i);j({id:s,action:t,result:r});break}case"newGroupByInboxIds":{const i=await e.conversations.newGroupByInboxIds(n.inboxIds,n.options),r=await M(i);j({id:s,action:t,result:r});break}case"newDm":{const i=await e.conversations.newDm(n.accountAddress,n.options),r=await M(i);j({id:s,action:t,result:r});break}case"newDmByInboxId":{const i=await e.conversations.newDmByInboxId(n.inboxId,n.options),r=await M(i);j({id:s,action:t,result:r});break}case"syncConversations":await e.conversations.sync(),j({id:s,action:t,result:void 0});break;case"syncAllConversations":await e.conversations.syncAll(n.consentStates),j({id:s,action:t,result:void 0});break;case"getConversationById":{const i=e.conversations.getConversationById(n.id),r=i?await M(i):void 0;j({id:s,action:t,result:r});break}case"getMessageById":{const i=e.conversations.getMessageById(n.id),r=i?S(i):void 0;j({id:s,action:t,result:r});break}case"getDmByInboxId":{const i=e.conversations.getDmByInboxId(n.inboxId),r=i?await M(i):void 0;j({id:s,action:t,result:r});break}case"getHmacKeys":{const n=e.conversations.getHmacKeys(),i=Object.fromEntries(Array.from(n.entries()).map((([e,t])=>[e,t.map(B)])));j({id:s,action:t,result:i});break}case"syncGroup":{const e=i(n.id);await e.sync();const r=await M(e);j({id:s,action:t,result:r});break}case"updateGroupName":{const e=i(n.id);await e.updateName(n.name),j({id:s,action:t,result:void 0});break}case"updateGroupDescription":{const e=i(n.id);await e.updateDescription(n.description),j({id:s,action:t,result:void 0});break}case"updateGroupImageUrlSquare":{const e=i(n.id);await e.updateImageUrl(n.imageUrl),j({id:s,action:t,result:void 0});break}case"sendGroupMessage":{const e=i(n.id),r=await e.send(b(w(n.content)));j({id:s,action:t,result:r});break}case"sendOptimisticGroupMessage":{const e=i(n.id).sendOptimistic(b(w(n.content)));j({id:s,action:t,result:e});break}case"publishGroupMessages":{const e=i(n.id);await e.publishMessages(),j({id:s,action:t,result:void 0});break}case"getGroupMessages":{const e=i(n.id),r=(await e.messages(n.options)).map((e=>S(e)));j({id:s,action:t,result:r});break}case"getGroupMembers":{const e=i(n.id),r=await e.members();j({id:s,action:t,result:r});break}case"getGroupAdmins":{const e=i(n.id).admins;j({id:s,action:t,result:e});break}case"getGroupSuperAdmins":{const e=i(n.id).superAdmins;j({id:s,action:t,result:e});break}case"getGroupConsentState":{const e=i(n.id).consentState;j({id:s,action:t,result:e});break}case"updateGroupConsentState":i(n.id).updateConsentState(n.state),j({id:s,action:t,result:void 0});break;case"addGroupAdmin":{const e=i(n.id);await e.addAdmin(n.inboxId),j({id:s,action:t,result:void 0});break}case"removeGroupAdmin":{const e=i(n.id);await e.removeAdmin(n.inboxId),j({id:s,action:t,result:void 0});break}case"addGroupSuperAdmin":{const e=i(n.id);await e.addSuperAdmin(n.inboxId),j({id:s,action:t,result:void 0});break}case"removeGroupSuperAdmin":{const e=i(n.id);await e.removeSuperAdmin(n.inboxId),j({id:s,action:t,result:void 0});break}case"addGroupMembers":{const e=i(n.id);await e.addMembers(n.accountAddresses),j({id:s,action:t,result:void 0});break}case"removeGroupMembers":{const e=i(n.id);await e.removeMembers(n.accountAddresses),j({id:s,action:t,result:void 0});break}case"addGroupMembersByInboxId":{const e=i(n.id);await e.addMembersByInboxId(n.inboxIds),j({id:s,action:t,result:void 0});break}case"removeGroupMembersByInboxId":{const e=i(n.id);await e.removeMembersByInboxId(n.inboxIds),j({id:s,action:t,result:void 0});break}case"isGroupAdmin":{const e=i(n.id).isAdmin(n.inboxId);j({id:s,action:t,result:e});break}case"isGroupSuperAdmin":{const e=i(n.id).isSuperAdmin(n.inboxId);j({id:s,action:t,result:e});break}case"getDmPeerInboxId":{const e=i(n.id).dmPeerInboxId();j({id:s,action:t,result:e});break}case"updateGroupPermissionPolicy":{const e=i(n.id);await e.updatePermission(n.permissionType,n.policy,n.metadataField),j({id:s,action:t,result:void 0});break}case"getGroupPermissions":{const e=i(n.id),r=(await M(e)).permissions;j({id:s,action:t,result:r});break}case"getGroupMessageDisappearingSettings":{const e=i(n.id).messageDisappearingSettings(),r=e?(e=>({fromNs:e.fromNs,inNs:e.inNs}))(e):void 0;j({id:s,action:t,result:r});break}case"updateGroupMessageDisappearingSettings":{const e=i(n.id);await e.updateMessageDisappearingSettings(n.fromNs,n.inNs),j({id:s,action:t,result:void 0});break}case"removeGroupMessageDisappearingSettings":{const e=i(n.id);await e.removeMessageDisappearingSettings(),j({id:s,action:t,result:void 0});break}case"isGroupMessageDisappearingEnabled":{const e=i(n.id).isMessageDisappearingEnabled();j({id:s,action:t,result:e});break}case"streamGroupMessages":{const e=i(n.groupId),r=(e,t)=>{e?q({type:"message",streamId:n.streamId,error:e.message}):E({type:"message",streamId:n.streamId,result:t?S(t):void 0})},a=e.stream(r);O.set(n.streamId,a),j({id:s,action:t,result:void 0});break}}}catch(e){(e=>{self.postMessage(e)})({id:s,action:t,error:e.message})}};
//# sourceMappingURL=client.js.map
